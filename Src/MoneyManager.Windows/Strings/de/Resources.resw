<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutTitle.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AccountTitle.Text" xml:space="preserve">
    <value>Konten</value>
  </data>
  <data name="AddAccountLabel.Label" xml:space="preserve">
    <value>Konto hinzufügen</value>
  </data>
  <data name="AddAccountText.Text" xml:space="preserve">
    <value>Konto hinzufügen</value>
  </data>
  <data name="AddAccountTitle.Text" xml:space="preserve">
    <value>Konto hinzufügen</value>
  </data>
  <data name="AddCategoryLabel.Label" xml:space="preserve">
    <value>Neue Kategorie</value>
  </data>
  <data name="AddIncomeLabel.Label" xml:space="preserve">
    <value>Einkommen hinzufügen</value>
  </data>
  <data name="AddSpendingLabel.Label" xml:space="preserve">
    <value>Ausgabe hinzufügen</value>
  </data>
  <data name="AddTransactionTitle.Text" xml:space="preserve">
    <value>Transaktion hinzufügen</value>
  </data>
  <data name="AddTransferLabel.Label" xml:space="preserve">
    <value>Übertrag hinzufügen</value>
  </data>
  <data name="BackupInformation.Text" xml:space="preserve">
    <value>Deine Daten werden in deinem OneDrive Konto gespeichert. Du findest sie in einem neuen Ordner namens "MoneyFoxBackupManager".</value>
  </data>
  <data name="RestoreInformation.Text" xml:space="preserve">
    <value>Wir laden die vorher erstellte Datenbanksicherung herunter und ersetzten deine lokalen Daten damit.
ACHTUNG: In der Zwischenzeit gemachte lokale Änderungen gehen verloren!</value>
  </data>
  <data name="BackupTitle.Text" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="CashFlowTitle.Label" xml:space="preserve">
    <value>Cashflow</value>
  </data>
  <data name="CategoriesHeader.Label" xml:space="preserve">
    <value>Kategorien</value>
  </data>
  <data name="CategorySummaryTitle.Label" xml:space="preserve">
    <value>Kategorie Zusammenfassung</value>
  </data>
  <data name="ContactLabel.Text" xml:space="preserve">
    <value>Kontakt:</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="DeleteAccountLabel.Label" xml:space="preserve">
    <value>Konto löschen</value>
  </data>
  <data name="DeveloperLabel.Text" xml:space="preserve">
    <value>Entwickler</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="InfoLabel.Text" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="OpenSourceNote.Text" xml:space="preserve">
    <value>Dieses Programm ist Open Source. Wir freuen uns über jeden Beitrag!</value>
  </data>
  <data name="RateThisApp.Content" xml:space="preserve">
    <value>Bewerte diese App</value>
  </data>
  <data name="SecurityHeader.Label" xml:space="preserve">
    <value>Sicherheit</value>
  </data>
  <data name="SelectCategoryTitle.Text" xml:space="preserve">
    <value>Wähle Kategorie</value>
  </data>
  <data name="SetDate.Label" xml:space="preserve">
    <value>Datum setzen</value>
  </data>
  <data name="SavePassword.Content" xml:space="preserve">
    <value>Passwort speichern</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="SpreadingTitle.Label" xml:space="preserve">
    <value>Verteilung</value>
  </data>
  <data name="TilesHeader.Label" xml:space="preserve">
    <value>Tiles</value>
  </data>
  <data name="TotalLabel.Text" xml:space="preserve">
    <value>Total:</value>
  </data>
  <data name="VersionLabel.Text" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="Password.Header" xml:space="preserve">
    <value>Passwort</value>
  </data>
  <data name="PasswordConfirmation.Header" xml:space="preserve">
    <value>Passwort bestätigen</value>
  </data>
  <data name="PasswordSettingSwitch.OffContent" xml:space="preserve">
    <value>Passwortschutz inaktiv</value>
  </data>
  <data name="PasswordSettingSwitch.OnContent" xml:space="preserve">
    <value>Passwortschutz aktiviert</value>
  </data>
  <data name="Login.Content" xml:space="preserve">
    <value>Einloggen</value>
  </data>
  <data name="PleaseLogin.Text" xml:space="preserve">
    <value>Bitte gib dein Passwort ein um dich anzumelden.</value>
  </data>
  <data name="Willkommen.Text" xml:space="preserve">
    <value>Willkommen!</value>
  </data>
  <data name="AddIncomeTile.Content" xml:space="preserve">
    <value>Einnahme Tile erstellen</value>
  </data>
  <data name="AddSpendingTile.Content" xml:space="preserve">
    <value>Ausgaben Tile erstellen</value>
  </data>
  <data name="AddTransferTile.Content" xml:space="preserve">
    <value>Übertrag Tile erstellen</value>
  </data>
  <data name="CategoryDialog.PrimaryButtonText" xml:space="preserve">
    <value>Fertig</value>
  </data>
  <data name="CategoryDialog.SecondaryButtonText" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="CategoryDialog.Title" xml:space="preserve">
    <value>Kategorie Hinzufügen</value>
  </data>
  <data name="CreateBackup.Content" xml:space="preserve">
    <value>Sicherung erstellen</value>
  </data>
  <data name="RemoveIncomeTile.Content" xml:space="preserve">
    <value>Einnahme Tile entfernen</value>
  </data>
  <data name="RemoveSpendingTile.Content" xml:space="preserve">
    <value>Ausgaben Tile entfernen</value>
  </data>
  <data name="RemoveTransferTile.Content" xml:space="preserve">
    <value>Übertrag Tile entfernen</value>
  </data>
  <data name="RestoreBackup.Content" xml:space="preserve">
    <value>Sicherung wiederherstellen</value>
  </data>
  <data name="SelectDateRangeDialog.PrimaryButtonText" xml:space="preserve">
    <value>Fertig</value>
  </data>
  <data name="SelectDateRangeDialog.SecondaryButtonText" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="SelectDateRangeDialog.Title" xml:space="preserve">
    <value>Zeitraum wählen</value>
  </data>
  <data name="ShowInfoOnMainTileHeader.Header" xml:space="preserve">
    <value>Informationen auf Haupttile anzeigen.</value>
  </data>
  <data name="SearchHeader.Header" xml:space="preserve">
    <value>Suche</value>
  </data>
  <data name="ShowInfoOnMainTileHeader.OffContent" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="ShowInfoOnMainTileHeader.OnContent" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="AmountTextBox.Header" xml:space="preserve">
    <value>Betrag</value>
  </data>
  <data name="CategoryTextBox.Header" xml:space="preserve">
    <value>Kategorie</value>
  </data>
  <data name="DateDatePicker.Header" xml:space="preserve">
    <value>Datum</value>
  </data>
  <data name="EnddateDatePicker.Header" xml:space="preserve">
    <value>Enddatum</value>
  </data>
  <data name="EndlessCheckBox.Content" xml:space="preserve">
    <value>Ist ohne Enddatum</value>
  </data>
  <data name="NoteTextBox.Header" xml:space="preserve">
    <value>Notiz</value>
  </data>
  <data name="RecurrenceComboBox.Header" xml:space="preserve">
    <value>Wiederholung</value>
  </data>
  <data name="RepeatSwitch.Header" xml:space="preserve">
    <value>Wiederholen</value>
  </data>
  <data name="TargetAccountTextBox.Header" xml:space="preserve">
    <value>Gutschriftskonto</value>
  </data>
  <data name="PrivacyInfo.Text" xml:space="preserve">
    <value>Zur Verbesserung dieser App sammeln wir anonyme Informationen über auftretende Fehler.</value>
  </data>
  <data name="DeleteLabel.Label" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="ModifyCategoryDialog.PrimaryButtonText" xml:space="preserve">
    <value>Fertig</value>
  </data>
  <data name="ModifyCategoryDialog.SecondaryButtonText" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="NameHeader.Header" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EndDateHeader.Header" xml:space="preserve">
    <value>Enddatum</value>
  </data>
  <data name="StartDateHeader.Header" xml:space="preserve">
    <value>Startdatum</value>
  </data>
</root>