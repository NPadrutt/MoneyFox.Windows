<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutLabel" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AccountRequiredMessage" xml:space="preserve">
    <value>Please select an account.</value>
  </data>
  <data name="AccountsLabel" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="AddAccountTitle" xml:space="preserve">
    <value>Add Account</value>
  </data>
  <data name="AddIncomeLabel" xml:space="preserve">
    <value>Add Income</value>
  </data>
  <data name="AddSpendingLabel" xml:space="preserve">
    <value>Add Expense</value>
  </data>
  <data name="AddTransferLabel" xml:space="preserve">
    <value>Add Transfer</value>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>Money Fox</value>
  </data>
  <data name="BackupFailedMessage" xml:space="preserve">
    <value>Backup failed!</value>
  </data>
  <data name="BackupLabel" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="CashflowLabel" xml:space="preserve">
    <value>Cashflow</value>
  </data>
  <data name="ChangeSubsequentPaymentMessage" xml:space="preserve">
    <value>This payment is recurring. Do you want to update the future payments aswell or just this occurence?</value>
  </data>
  <data name="ChangeSubsequentPaymentTitle" xml:space="preserve">
    <value>Update Recurrence?</value>
  </data>
  <data name="DailyLabel" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="DailyWithoutWeekendLabel" xml:space="preserve">
    <value>Daily without weekend</value>
  </data>
  <data name="DeleteAccountConfirmationMessage" xml:space="preserve">
    <value>Do you really want to delete this account?</value>
  </data>
  <data name="DeleteCategoryConfirmationMessage" xml:space="preserve">
    <value>Do you really want to delete this category?</value>
  </data>
  <data name="DeleteLabel" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ShortcutsTitle" xml:space="preserve">
    <value>Shortcuts</value>
  </data>
  <data name="SecurityTitle" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="DeleteTitle" xml:space="preserve">
    <value>Delete?</value>
  </data>
  <data name="DeletePaymentConfirmationMessage" xml:space="preserve">
    <value>Do you really want to delete this payment?</value>
  </data>
  <data name="EditLabel" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ExpenseLabel" xml:space="preserve">
    <value>Expenses</value>
  </data>
  <data name="FeedbackLabel" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="FeedbackSubject" xml:space="preserve">
    <value>Feedback Money Fox</value>
  </data>
  <data name="EditIncomeTitle" xml:space="preserve">
    <value>Edit Income</value>
  </data>
  <data name="IncreaseLabel" xml:space="preserve">
    <value>Gains</value>
  </data>
  <data name="JustThisLabel" xml:space="preserve">
    <value>Just This</value>
  </data>
  <data name="LoginFailedMessage" xml:space="preserve">
    <value>We couldn't log you in. Please ensure you have an active internet connection.</value>
  </data>
  <data name="LoginFailedTitle" xml:space="preserve">
    <value>Login failed!</value>
  </data>
  <data name="MandatoryFieldEmptyTitle" xml:space="preserve">
    <value>Mandatory field</value>
  </data>
  <data name="MenuTitle" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="MonthlyLabel" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="NameRequiredMessage" xml:space="preserve">
    <value>Please insert a name.</value>
  </data>
  <data name="NoLabel" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoNamePlaceholderLabel" xml:space="preserve">
    <value>[No Name]</value>
  </data>
  <data name="NoneLabel" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="OkLabel" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="OverwriteBackupMessage" xml:space="preserve">
    <value>Existing backups will be overwritten. Do you wanna continue?</value>
  </data>
  <data name="OverwriteTitle" xml:space="preserve">
    <value>Overwrite?</value>
  </data>
  <data name="RecurringLabel" xml:space="preserve">
    <value>Update All</value>
  </data>
  <data name="RestoreFailedMessage" xml:space="preserve">
    <value>Restore failed!</value>
  </data>
  <data name="RevenueLabel" xml:space="preserve">
    <value>Revenue</value>
  </data>
  <data name="SelectDateTitle" xml:space="preserve">
    <value>Select Date</value>
  </data>
  <data name="SelectOperationLabel" xml:space="preserve">
    <value>select operation</value>
  </data>
  <data name="SettingsLabel" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="EditSpendingTitle" xml:space="preserve">
    <value>Edit Expense</value>
  </data>
  <data name="StatisticsLabel" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="StatisticTitle" xml:space="preserve">
    <value>Statistic</value>
  </data>
  <data name="SuccessTitle" xml:space="preserve">
    <value>Success!</value>
  </data>
  <data name="TaskSuccessfulMessage" xml:space="preserve">
    <value>Task was successful completed.</value>
  </data>
  <data name="EditTransferTitle" xml:space="preserve">
    <value>Edit Transfer</value>
  </data>
  <data name="WeeklyLabel" xml:space="preserve">
    <value>Weekly</value>
  </data>
  <data name="YearlyLabel" xml:space="preserve">
    <value>Yearly</value>
  </data>
  <data name="YesLabel" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="OverwriteDataMessage" xml:space="preserve">
    <value>Your local data will be deleted. Are you sure you wanna proceed?</value>
  </data>
  <data name="AddIncomeTitle" xml:space="preserve">
    <value>Add Income</value>
  </data>
  <data name="AddSpendingTitle" xml:space="preserve">
    <value>Add Expense</value>
  </data>
  <data name="AddTransferTitle" xml:space="preserve">
    <value>Add Transfer</value>
  </data>
  <data name="EditTitle" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="PasswordConfirmationWrongMessage" xml:space="preserve">
    <value>The passwod and the password confirmation didn't match. Please check your input.</value>
  </data>
  <data name="PasswordConfirmationWrongTitle" xml:space="preserve">
    <value>Password confirmation</value>
  </data>
  <data name="PasswordSavedMessage" xml:space="preserve">
    <value>Password was saved succesfully.</value>
  </data>
  <data name="PasswordSavedTitle" xml:space="preserve">
    <value>Password saved</value>
  </data>
  <data name="PasswordWrongMessage" xml:space="preserve">
    <value>The password you entered was not correct. Please try again.</value>
  </data>
  <data name="PasswordWrongTitle" xml:space="preserve">
    <value>Password wrong</value>
  </data>
  <data name="AddTitle" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="CategorySummary" xml:space="preserve">
    <value>Category Summary</value>
  </data>
  <data name="SpreadingLabel" xml:space="preserve">
    <value>Category Spreading</value>
  </data>
  <data name="ChargedAccountLabel" xml:space="preserve">
    <value>Charged Account</value>
  </data>
  <data name="TargetAccountLabel" xml:space="preserve">
    <value>Target Account</value>
  </data>
  <data name="InvalidEnddateMessage" xml:space="preserve">
    <value>The enddate of a recurring payment has to be in the future. Please check your input.</value>
  </data>
  <data name="InvalidEnddateTitle" xml:space="preserve">
    <value>Invalid End Date</value>
  </data>
  <data name="NotNowLabel" xml:space="preserve">
    <value>Not Now</value>
  </data>
  <data name="RateReminderText" xml:space="preserve">
    <value>We hope you like our app. Support us with a rating in the store.
Do you want to go the the store to rate?</value>
  </data>
  <data name="RateReminderTitle" xml:space="preserve">
    <value>Rate this app</value>
  </data>
  <data name="BiweeklyLabel" xml:space="preserve">
    <value>Biweekly</value>
  </data>
  <data name="AddCategoryTitle" xml:space="preserve">
    <value>Add Category </value>
  </data>
  <data name="EditCategoryTitle" xml:space="preserve">
    <value>Edit Category</value>
  </data>
  <data name="CategoriesLabel" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="CashflowDescription" xml:space="preserve">
    <value>Income, expenses and gain for the selected time period.</value>
  </data>
  <data name="CategorieSpreadingDescription" xml:space="preserve">
    <value>Spreading of the expenses to the categories.</value>
  </data>
  <data name="CategorySummaryDescription" xml:space="preserve">
    <value>Summary of the categories with a payment.</value>
  </data>
  <data name="ExpenseHistory" xml:space="preserve">
    <value>Expense History</value>
  </data>
  <data name="ExpenseHistoryDescription" xml:space="preserve">
    <value>Shows a month by month comparison over your total expenses for the selected time range.</value>
  </data>
</root>